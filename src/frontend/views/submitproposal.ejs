<%- include('header_s') -%>
    <div class="header">
        <div class="inner-header flex">
            <h1 id="submit-proposal-title" class="is-size-1 has-text-centered">Submit to your Professor of choice</h1>
        </div>
    </div>
    <br>
    <br>
    <div class="header">
        <div class="inner-header flex">
            <h1 class="has-text-centered"><a id="return-link" href="/proposal" class="button is-medium  is-teal">Return</a></h1>
        </div>
    </div>

    <div id="search_bar" class="field has-text-centered">
        <div class="control has-icons-left">
            <input class="input" type="text" id="search-bar" onkeyup="searchBar()" placeholder="Search for Professor">
            <span class="icon is-small is-left">
                <i class="fa-solid fa-magnifying-glass"></i>
            </span>
        </div>
    </div>

    <table id="submit-professor" class="table is-fullwidth is-hoverable">
        <thead id="tablehead">
            <tr>
                <th id="table-name">NAME</th>
                <th>EMAIL</th>
                <th class="has-text-right">CHOOSE</th>
            </tr>
        </thead>
        <tbody id="professorlist">
      
        </tbody>
    </table>

    <div id="submit-proposal-modal" class="modal">
        <div class="modal-background"></div>
        <div class="modal-content has-background-white py-5 px-5">
            <div class="header">
                <div class="inner-header flex">
                    <h1 id="submit-proposal-modal-title" class="is-size-1 has-text-centered">Are you ready to submit?</h1>
                    <h1 class="is-size-3 has-text-centered">This Action Cannot be Undone!</h1>
                </div>
            </div>
            
            <footer id="submit-proposal-footer" class="modal-card-foot">
            </footer>
        </div>
        <button class="modal-close is-large" aria-label="close"></button>
    </div>

    <script>
        //function to remove the confirmation box
        function removeModal() {
            let modal = document.getElementById("submit-proposal-modal");
            modal.className = "modal";
        }

        //function to activate the confirmation box for submitting a proposal to a chosen professor
        function activateModal(email) {
            let htmlString = "<button class=\"button is-teal is-rounded\" onclick=\"chooseProf('"+email+"')\">Yes Submit</button><button class=\"button is-teal is-rounded\" onclick=\"removeModal()\">No, Choose Another Professor</button>";
            let footer = document.getElementById("submit-proposal-footer");
            let title = document.getElementById("submit-proposal-modal-title");
            footer.innerHTML = htmlString;
            title.innerHTML = "Submit to [" + email + "]";

            let modal = document.getElementById("submit-proposal-modal");
            modal.className = "modal is-active";
        }

        //function to display the name of the staff member written in the students proposal form for them to recall
        function getStaff () {
            fetch('http://127.0.0.1:8000/api/proposals/', {
            method: 'GET',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json',
                'Authorization': 'Bearer '+token
            }
            })
            .then(resp=>resp.json())
            .then(data => {
                let proposal = data[0];
                let staff = proposal['staff'];
                let name = document.getElementById("table-name");
                name.innerHTML = "NAME: "+staff;
            })
        }

        //function to submit the proposal to the chosen professor for the professor to view and accept/reject
        function chooseProf(email) {
            fetch('http://127.0.0.1:8000/apisubmitproposal/', {
            'method':'POST',
            'headers':{
                "Accept": "application/json",
                "Content-Type": "application/json",
                "Authorization": 'Bearer '+localStorage.getItem("access")
            },
            'body': JSON.stringify({email:email})
            })
            .then(resp=>resp.json())
            .then(data=>{
                console.log("Proposal Submitted");
            })
            window.location.reload();
        }

        //function to display a table row with the professors provided details
        function displayTable(profs) {
            let name = profs['name'];
            let email = profs['email'];

            let htmlString = "<tr><td>"+ name +"</td><td>"+ email +"</td><td><div class=\"has-text-right\"><button id=\"submit-proposal-link\" class=\"button is-teal\" onclick=\"activateModal('"+email+"')\">Submit</button></div></td></tr>";
            let row = document.getElementById("professorlist");
            row.innerHTML += htmlString;  
        }

        //function to build a table with a list of all professors
        function buildTable(){
            let token = localStorage.getItem("access");
            fetch("http://127.0.0.1:8000/api/accepted/", {
            method: 'GET',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json',
                'Authorization': 'Bearer '+token
            }
            })
            .then(resp=>resp.json())
            .then(data=>{
                if (data.length == 0) {
                    fetch("http://127.0.0.1:8000/api/professors/", {
                    method: 'GET',
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json',
                        'Authorization': 'Bearer '+token
                    }
                    })
                    .then(resp=>resp.json())
                    .then(data=>{
                        data.forEach(element => {
                            displayTable(element);
                        });
                    })
                }
                else {
                    let table = document.getElementById("submit-professor");
                    let search_bar = document.getElementById("search_bar");
                    table.remove()                   
                    search_bar.remove()

                    let accepted_object = data[0];
                    let professor_id = accepted_object['professor'];

                    fetch(professor_id, {
                    method: 'GET',
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json',
                        'Authorization': 'Bearer '+token
                    }
                    })
                    .then(resp=>resp.json())
                    .then(data=>{
                        let name = data['name'];
                        let title = document.getElementById("submit-proposal-title");
                        title.innerHTML = "Proposal Submitted to "+name;
                        let link = document.getElementById("return-link");
                        link.href = "/studentpage";
                        link.innerHTML = "Continue";
                    })
                }
            })
        }

        //function to take a query from the search bar and display only professors with names similar to the provided query
        function searchBar() {
            let input = document.getElementById("search-bar");
            let filter = input.value.toUpperCase();
            let table = document.getElementById("professorlist");
            let tr = table.getElementsByTagName("tr");

            for (i = 0; i < tr.length; i++) {

                let name = tr[i].getElementsByTagName("td")[0];
                let txtValue = name.textContent || name.innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }

        getStaff();
        buildTable();
    </script>

<%- include('footer') -%>